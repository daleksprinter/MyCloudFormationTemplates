AWSTemplateFormatVersion: '2010-09-09'
Resources:
    VPC:
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: 10.0.0.0/16
            Tags:
                - Key: Name
                  Value: cloud-formation-test
    InternetGateway:
        Type: AWS::EC2::InternetGateway
        Properties:
            Tags:
                - Key: Name
                  Value: cloud-formation-test


    AttachGateway:
        Type: AWS::EC2::VPCGatewayAttachment
        Properties:
            VpcId: !Ref VPC
            InternetGatewayId: !Ref InternetGateway

    RouteTable:
        Type: AWS::EC2::RouteTable
        DependsOn: AttachGateway
        Properties:
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: cloud-fromation-test
               
    Route:
        Type: AWS::EC2::Route
        DependsOn: AttachGateway
        Properties:
            RouteTableId: !Ref RouteTable
            DestinationCidrBlock: 0.0.0.0/0
            GatewayId: !Ref InternetGateway

    PublicSubnet1:
        Type: AWS::EC2::Subnet
        DependsOn: AttachGateway
        Properties:
            CidrBlock: 10.0.2.0/24
            MapPublicIpOnLaunch: 'true'
            AvailabilityZone: ap-northeast-1a
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: cloud-formation-test
                       
    SubnetRouteTableAssociation1:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref PublicSubnet1
            RouteTableId: !Ref RouteTable        

    PublicSubnet2:
        Type: AWS::EC2::Subnet
        DependsOn: AttachGateway
        Properties:
            CidrBlock: 10.0.3.0/24
            MapPublicIpOnLaunch: 'true'
            AvailabilityZone: ap-northeast-1c
            VpcId: !Ref VPC
            Tags:
                - Key: Name
                  Value: cloud-formation-test

    SubnetRouteTableAssociation2:
        Type: AWS::EC2::SubnetRouteTableAssociation
        Properties:
            SubnetId: !Ref PublicSubnet2
            RouteTableId: !Ref RouteTable        
    
    EC2SecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: TESTSG
            VpcId: !Ref VPC        
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: 22
                  ToPort: 22
                  CidrIp: 0.0.0.0/0

                - IpProtocol: tcp
                  FromPort: 80
                  ToPort: 80
                  CidrIp: 0.0.0.0/0
    
    EC2a:
        Type: AWS::EC2::Instance
        Properties:
            ImageId: ami-052652af12b58691f
            InstanceType: t2.micro
            NetworkInterfaces:
                - AssociatePublicIpAddress: "true"
                  SubnetId: !Ref PublicSubnet1
                  DeviceIndex: "0"
                  GroupSet:
                      - !Ref EC2SecurityGroup
            KeyName: default-key
            Tags:
                - Key: Name
                  Value: cloud-formation-test                
    
    ElasticIPa:
        Type: AWS::EC2::EIP        
        Properties:
            InstanceId: !Ref EC2a
            Domain: vpc

    EC2b:
        Type: AWS::EC2::Instance
        Properties:
            ImageId: ami-052652af12b58691f        
            InstanceType: t2.micro
            NetworkInterfaces:
                - AssociatePublicIpAddress: "true"                   
                  SubnetId: !Ref PublicSubnet2
                  DeviceIndex: "0"
                  GroupSet:
                      - !Ref EC2SecurityGroup
            KeyName: default-key                   
            Tags:
                - Key: Name
                  Value: cloudformation-test            

    ElasticIPb:
        Type: AWS::EC2::EIP
        Properties:
            InstanceId: !Ref EC2b
            Domain: vpc

    ELB:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Name: cloudformation-test
            Scheme: internet-facing
            SecurityGroups:
                - !Ref EC2SecurityGroup
            Subnets:
                - !Ref PublicSubnet1
                - !Ref PublicSubnet2
